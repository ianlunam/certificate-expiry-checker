AWSTemplateFormatVersion: 2010-09-09
Description: Infrastructure Alerts
Parameters:
    S3Bucket:
        Type: String
        Description: "Bucket containing lambda code"
        Default: "pd-log-handler-bits"
    S3Key:
        Type: String
        Description: "Filename for lambda code in bucket"
        Default: "package.zip"
    SenderEmail:
        Type: String
        Description: "Email source address. Must be verified in SES"
        Default: "ian@example.com"
    RecipientEmail:
        Type: String
        Description: "Email destination address."
        Default: "ian@example.com"
    WeeksExpiry:
        Type: Number
        Description: "Number of weeks to report on"
        Default: 8
    LambdaKey:
        Type: String
        Default: "dummy"

Resources:

    CertificateExpiryCheckerLambdaRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    Effect: "Allow"
                    Principal:
                        Service:
                            -   "lambda.amazonaws.com"
                    Action:
                        -   "sts:AssumeRole"
            Path: "/"
            Policies:
                -   PolicyName: 'CloudWatchLogs'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: "Allow"
                                Action:
                                    -   "logs:CreateLogGroup"
                                    -   "logs:CreateLogStream"
                                    -   "logs:PutLogEvents"
                                Resource: "arn:aws:logs:*:*:*"
                -   PolicyName: 'SendEmails'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: "Allow"
                                Action:
                                    -   "ses:SendEmail"
                                    -   "ses:SendRawEmail"
                                Resource: "*"
                -   PolicyName: 'S3Buckets'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: "Allow"
                                Action:
                                    -   "s3:*"
                                Resource: "arn:aws:s3:::*"
                -   PolicyName: 'AccessCertificates'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: "Allow"
                                Action:
                                    -   "acm:DescribeCertificate"
                                    -   "acm:ListCertificates"
                                Resource: "*"
                -   PolicyName: 'STS'
                    PolicyDocument:
                        Version: '2012-10-17'
                        Statement:
                            -   Effect: "Allow"
                                Action:
                                    -   "sts:GetCallerIdentity"
                                Resource: "*"
            Tags:
                -   Key: "stack"
                    Value: !Ref 'AWS::StackName'


    CertificateExpiryCheckerLambda:
        Type: AWS::Lambda::Function
        Properties:
            Description: "Lambda function for certificate expiry checking"
            FunctionName: !Sub '${AWS::StackName}'
            Runtime: python3.8
            Handler: 'lambda_function.lambda_handler'
            Role: !GetAtt 'CertificateExpiryCheckerLambdaRole.Arn'
            Timeout: 60
            Code:
                S3Bucket: !Ref S3Bucket
                S3Key: !Ref S3Key
            Environment:
                Variables:
                    SENDER_EMAIL: !Ref SenderEmail
                    RECIPIENT_EMAIL: !Ref RecipientEmail
                    WEEKS_EXPIRY: !Ref WeeksExpiry


    ScheduledRule:
        Type: AWS::Events::Rule
        Properties:
            Description: "ScheduledRule"
            ScheduleExpression: "cron(0 15 ? * 5 *)"
            State: "ENABLED"
            Targets:
                -
                    Arn:
                        Fn::GetAtt:
                            - "CertificateExpiryCheckerLambda"
                            - "Arn"
                    Id: "CertificateExpiryCheckerLambda"

    PermissionForEventsToInvokeLambda:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName:
                Ref: "CertificateExpiryCheckerLambda"
            Action: "lambda:InvokeFunction"
            Principal: "events.amazonaws.com"
            SourceArn:
                Fn::GetAtt:
                    - "ScheduledRule"
                    - "Arn"
